<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
			http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
			http://www.springframework.org/schema/context 
			http://www.springframework.org/schema/context/spring-context-4.3.xsd
			http://www.springframework.org/schema/tx 
			http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
			http://www.springframework.org/schema/aop 
			http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
			http://www.springframework.org/schema/data/jpa 
			http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">
	<context:property-placeholder location="classpath:/config/jdbc.properties" />




	<!-- 自动扫描dao和service包(自动注入) -->
	<context:component-scan base-package="cn.myth"
		use-default-filters="false">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Service" />
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Component" />
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Repository" />
	</context:component-scan>



	<!-- 数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.user}" />
		<property name="password" value="${jdbc.pass}" />
		<!-- 请求超时时间 -->
		<property name="checkoutTimeout" value="30000" />
		<!-- 每60秒检查所有连接池中的空闲连接。默认值: 0，不检查 -->
		<property name="idleConnectionTestPeriod" value="30" />
		<!-- 连接数据库连接池最大空闲时间 -->
		<property name="maxIdleTime" value="30" />
		<!-- 连接池初始化连接数 -->
		<property name="initialPoolSize" value="5" />
		<property name="minPoolSize" value="5" />
		<property name="maxPoolSize" value="20" />
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。默认值: 3 -->
		<property name="acquireIncrement" value="5" />
	</bean>


	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter" />
		<!-- 加入定制化包路径 -->
		<property name="packagesToScan" value="cn.myth.data" />

		<property name="jpaProperties">
			<props>
				<!--<prop key="hibernate.current_session_context_class">thread</prop> -->
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop><!-- validate/update/create -->
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop><!-- 建表的命名规则 -->
				<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
			</props>
		</property>
	</bean>

	<!-- 设置JPA实现厂商的特定属性 -->
	<bean id="hibernateJpaVendorAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="databasePlatform" value="${hibernate.dialect}" />
	</bean>

	<!-- Jpa 事务配置 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<!-- Spring Data Jpa配置 -->
	<jpa:repositories base-package="cn.myth.repositories"
		transaction-manager-ref="transactionManager"
		entity-manager-factory-ref="entityManagerFactory" />


	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />

	<bean id="exceptionResolver" class="cn.myth.base.BaseExceptionResolver" />

	<import resource="spring-security.xml" />

	<!-- ======================================================================= -->
	<!-- 配置sessionFactory，统一管理一个数据库的连接 <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean"> 
		<property name="dataSource" ref="dataSource" /> <property name="packagesToScan"> 
		<list> -->
	<!-- 可以加多个包，需要hibenate映射的类的包 <value>cn.myth.MoodBlog.entity</value> </list> 
		</property> <property name="hibernateProperties"> <props> <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop> 
		<prop key="hibernate.dialect">${hibernate.dialect}</prop> <prop key="hibernate.show_sql">${hibernate.show_sql}</prop> 
		<prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop> -->
	<!-- <prop key="hibernate.current_session_context_class">thread</prop> </props> 
		</property> </bean> -->

	<!-- 开启注解事务 只对当前配置文件有效 <tx:annotation-driven transaction-manager="transactionManager" 
		proxy-target-class="true" /> -->

	<!-- 配置Hibernate事务管理器 <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager"> 
		<property name="sessionFactory" ref="sessionFactory" /> </bean> -->


	<!-- <aop:aspectj-autoproxy proxy-target-class="true" /> <tx:advice id="txAdvice" 
		transaction-manager="transactionManager"> <tx:attributes> <tx:method name="get*" 
		read-only="true" /> <tx:method name="select*" read-only="true" /> <tx:method 
		name="add*" isolation="READ_COMMITTED" rollback-for="Exception" /> <tx:method 
		name="update*" isolation="READ_COMMITTED" rollback-for="Exception" /> <tx:method 
		name="delete*" isolation="READ_COMMITTED" rollback-for="Exception" /> </tx:attributes> 
		</tx:advice> -->
	<!-- 在service层实现事务控制 <aop:config> <aop:pointcut expression="execution(* 
		cn.myth.MoodBlog.service.*.*(..))" id="pointCut" /> <aop:advisor advice-ref="txAdvice" 
		pointcut-ref="pointCut" /> </aop:config> <aop:aspectj-autoproxy proxy-target-class="true" 
		/> -->

</beans> 